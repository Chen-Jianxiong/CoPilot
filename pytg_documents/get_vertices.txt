`getVertices(vertexType: str, where: str = "", limit: Union[int, str] = None, sort: str = "", withId: bool = True, withType: bool = False, timeout: int = 0)` → Union[dict, str, pd.DataFrame]

Retrieves vertices of the given vertex type.

Note: The primary ID of a vertex instance is NOT an attribute, thus cannot be used in select, where or sort parameters (unless the WITH primary_id_as_attribute clause was used when the vertex type was created).
Use getVerticesById() if you need to retrieve vertices by their primary ID.
Parameters:
    vertexType: The name of the vertex type.

    where: Comma separated list of conditions that are all applied on each vertex' attributes. The conditions are in logical conjunction (i.e. they are "AND’ed" together).

    sort: Comma separated list of attributes the results should be sorted by. Must be used with limit.

    limit: Maximum number of vertex instances to be returned (after sorting). Must be used with sort.

    withId: (When the output format is "df") should the vertex ID be included in the dataframe?

    withType: (When the output format is "df") should the vertex type be included in the dataframe?

    timeout: Time allowed for successful execution (0 = no limit, default).

Returns:
The (selected) details of the (matching) vertex instances (sorted, limited) as dictionary, JSON or pandas DataFrame.
